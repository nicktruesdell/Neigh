@using neigh.Classes
@model IEnumerable<neigh.Models.ShowModel>

@{
    ViewBag.Title = "Manage Shows";
}

<h2>Manage Shows</h2>

<p>
    @Html.ActionLink("Create New Show", "Create")
</p>

<table class="table">
    <tr>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Level)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th scope="col">
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th scope="col">
            Action
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @*@item.Level.GetDisplayName()*@
                @Html.EnumDisplayFor(model => item.Level)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.ActionLink("Edit", "Copy_Edit", new { id = item.Id }) |
                @Html.ActionLink("Copy", "Copy", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>