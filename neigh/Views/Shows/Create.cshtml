@model neigh.Models.ShowCopyModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" ng-app="app" ng-controller="JudgesController">
        <h4>Show</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control", ng_model = "Type", ng_change = "getClasses()" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Level, htmlAttributes: new { @class = "form-control", ng_model = "Level" })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", ng_model = "Name" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes:  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", ng_model = "StartDate" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", ng_model = "EndDate" })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", ng_model = "Location" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group" data-judge="true" ng-repeat="judge in judges track by $index">
                <label ng-attr="{for: '\'txtJudge\' + $index'}" class="control-label col-md-2">{{'Judge ' + ($index + 1)}}</label>
                <div class="col-md-10">
                    <input type="text" class="form-control" ng-attr="{id:'\'txtJudge\' + $index', name:'\'Judges[\' + $index + \']\''}" ng-model="judge.name"/>
                    <a ng-show="$index == judges.length - 1" href="javascript: void(0)" ng-click="newJudge()">Add Another Judge</a>
                    <a ng-show="$index != judges.length - 1" href="javascript:void(0)" ng-click="removeJudge($index)">Remove Judge</a>
                </div>
            </div>

        <table class="table">
            <thead>
                <tr>
                    <th scope="col" style="width: 10%">Order</th>
                    <th scope="col" style="width: 10%">Class #</th>
                    <th scope="col" style="width: 50%">Class</th>
                    <th scope="col" style="width: 15%">Horse</th>
                    <th scope="col" style="width: 15%">Actions</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat="entry in entries">
                    <td style="width: 10%">
                        <input type="text" class="form-control" ng-model="entry.SortOrder" />
                    </td>
                    <td style="width: 10%">
                        <input type="text" class="form-control" ng-model="entry.ClassNumber" />
                    </td>
                    <td style="width: 50%">
                        <select class="form-control" style="max-width:100%" ng-options="class.Value as class.Text for class in allClasses" ng-model="entry.ClassId"></select>
                    </td>
                    <td style="width: 15%">
                        <select class="form-control" ng-options="horse.Value as horse.Text for horse in allHorses" ng-model="entry.HorseId"></select>
                    </td>
                    <td style="width: 15%">
                        <a href="javascript:void(0)" ng-click="removeEntry($index)">Remove</a>
                    </td>
                </tr>
                <tr>
                    <td colspan="4">
                        <a href="javascript:void(0)" ng-click="addEntry(1)">Add Additional Entry</a>&nbsp;
                        <a href="javascript:void(0)" ng-click="addEntry(5)">Add 5 Additional Entries</a>
                    </td>
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" ng-click="save()" class="btn btn-default">Create Show</button>
                <button type="button" ng-click="returnToIndex()" class="btn btn-danger">Cancel - Back to Shows</button>
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/angular")

    <script type="text/javascript">
        app.factory('classesFactory', ['$resource', function ($resource) {
            return $resource('/admin/HorseInClass', null, {
                'forShowType': { url: '/Admin/HorseInClass/ForShowType/:showType', isArray: true }
            });
        }]);

        app.factory('horsesFactory', ['$resource', function ($resource) {
            return $resource('/admin/Horses', null, {
                'getAll': { url: '/Admin/Horses/GetAll', isArray: true }
            });
        }]);

        app.controller("JudgesController", ['$http', '$scope', 'classesFactory', 'horsesFactory', function ($http, $scope, classesFactory, horsesFactory) {
            $scope.StartDate = null;
            $scope.EndDate = null;
            $scope.Type = null
            $scope.Location = null;
            $scope.Level = null;
            $scope.entries = [{ SortOrder: 1 }, { SortOrder: 2 }, { SortOrder: 3 }, { SortOrder: 4 }, { SortOrder: 5 }, { SortOrder: 6 }, { SortOrder: 7 },
                { SortOrder: 8 }, { SortOrder: 9 }, { SortOrder: 10 }];
            $scope.judges = [{ name: "A" }, { name: "B" }, { name: "C" }];
            $scope.allClasses = [];
            $scope.allHorses = horsesFactory.getAll();
            $scope.getClasses = function () {
                $scope.allClasses = classesFactory.forShowType({ showType: $scope.Type });
            };
            $scope.newJudge = function () {
                $scope.judges.push({ name: ""});
            };
            $scope.removeJudge = function (index) {
                $scope.judges.splice(index, 1);
            };
            $scope.addEntry = function (count) {
                for (var x = 0; x < count; x++) {
                    var i = $scope.entries.length + 1;
                    $scope.entries.push({ SortOrder: i });
                }
            }
            $scope.removeEntry = function (index) {
                $scope.entries.splice(index, 1);
            }
            $scope.returnToIndex = function () {
                window.location = '/Admin/Shows';
            };
            $scope.save = function () {
                var errors = null;
                $scope.entries.forEach(function (item) {
                    if (!item.HorseId) {
                        errors = "A horse is required for all classes.";
                    }
                });
                for (var i = 0; i < $scope.entries.length - 1; i++) {
                    for (var j = i + 1; j < $scope.entries.length; j++) {
                        if ($scope.entries[i].HorseId == $scope.entries[j].HorseId && $scope.entries[i].ClassId == $scope.entries[j].ClassId) {
                            errors = "The same horse can only be entered in a class one time.";
                            break;
                        }
                    }
                    if (errors)
                        break;
                }
                if (errors) {
                    alert(errors);
                    return;
                }
                var postData = {
                    Type: $scope.Type,
                    Location: $scope.Location,
                    Level: $scope.Level,
                    Entries: $scope.entries,
                    Judges: [],
                    Name: $scope.Name,
                    StartDate: $scope.StartDate,
                    EndDate: $scope.EndDate
                };
                $scope.judges.forEach(function (item) {
                    postData.Judges.push(item.name);
                });
                $http.post('/Admin/Shows/Copy', postData).then(
                    function success() {
                        $scope.returnToIndex();
                    },
                    function error(response) {
                        alert('Unable to submit changes. Please try again. Status code ' + response.status);
                    }
                );
            };
        }]);
    </script>
}
